networks:
  sdrhub:
    driver: bridge

services:
  #
  # Traefik
  # --------------------------------------------------
  sdrhub-traefik:
    image: traefik:v3.3.6
    container_name: sdrhub-traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    networks:
      - sdrhub
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  #
  # Homepage
  # --------------------------------------------------
  sdrhub-homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: sdrhub-homepage
    restart: unless-stopped
    networks:
      - sdrhub
    volumes:
      - ./docker/homepage/data/config:/app/config
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=${HOMEPAGE_ALLOWED_HOSTS}
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.routers.sdrhub-homepage.entrypoints=web
      - traefik.http.routers.sdrhub-homepage.service=sdrhub-homepage
      - traefik.http.routers.sdrhub-homepage.rule=Host(`sdrhub.localhost`)
      - traefik.http.services.sdrhub-homepage.loadbalancer.server.port=3000
  #
  # Glances
  # --------------------------------------------------
  sdrhub-glances:
    image: nicolargo/glances:latest
    container_name: sdrhub-glances
    restart: unless-stopped
    pid: host
    networks:
      - sdrhub
    environment:
      - GLANCES_OPT=-w
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.routers.sdrhub-glances.entrypoints=web
      - traefik.http.routers.sdrhub-glances.service=sdrhub-glances
      - traefik.http.routers.sdrhub-glances.rule=Host(`glances.sdrhub.localhost`)
      - traefik.http.services.sdrhub-glances.loadbalancer.server.port=61208
  #
  # Dozzle
  # --------------------------------------------------
  sdrhub-dozzle:
    image: amir20/dozzle:latest
    container_name: sdrhub-dozzle
    restart: unless-stopped
    networks:
      - sdrhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.routers.sdrhub-dozzle.entrypoints=web
      - traefik.http.routers.sdrhub-dozzle.service=sdrhub-dozzle
      - traefik.http.routers.sdrhub-dozzle.rule=Host(`dozzle.sdrhub.localhost`)
      - traefik.http.services.sdrhub-dozzle.loadbalancer.server.port=8080
  #
  # Ntfy
  # --------------------------------------------------
  sdrhub-ntfy:
    image: binwiederhier/ntfy:latest
    container_name: sdrhub-ntfy
    restart: unless-stopped
    command: serve
    networks:
      - sdrhub
    volumes:
      - ./docker/ntfy/data:/var/lib/ntfy
    environment:
      - NTFY_ENABLE_LOGIN=true
      - NTFY_BEHIND_PROXY=true
      - NTFY_BASE_URL=${NTFY_BASE_URL}
      - NTFY_AUTH_FILE=/var/lib/ntfy/auth.db
      - NTFY_CACHE_FILE=/var/lib/ntfy/cache.db
      - NTFY_ATTACHMENT_CACHE_DIR=/var/lib/ntfy/attachments
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.routers.sdrhub-ntfy.entrypoints=web
      - traefik.http.routers.sdrhub-ntfy.service=sdrhub-ntfy
      - traefik.http.routers.sdrhub-ntfy.rule=Host(`ntfy.sdrhub.localhost`)
      - traefik.http.services.sdrhub-ntfy.loadbalancer.server.port=80
  #
  # OpenWebRX
  # --------------------------------------------------
  sdrhub-openwebrx:
    image: jketterl/openwebrx:latest
    container_name: sdrhub-openwebrx
    restart: unless-stopped
    networks:
      - sdrhub
    volumes:
      - ./docker/openwebrx/data/config:/app/config
    environment:
      - OPENWEBRX_ADMIN_PASSWORD=${OPENWEBRX_ADMIN_PASSWORD}
    labels:
      - traefik.enable=true
      # Default
      - traefik.http.routers.sdrhub-openwebrx.entrypoints=web
      - traefik.http.routers.sdrhub-openwebrx.service=sdrhub-openwebrx
      - traefik.http.routers.sdrhub-openwebrx.rule=Host(`openwebrx.sdrhub.localhost`)
      - traefik.http.services.sdrhub-openwebrx.loadbalancer.server.port=8073
